---
greedy: false
---

:ruby
  mp4 ||= nil
  ogv ||= nil
  poster ||= ""
  content ||= ""
  id ||= ('a'..'z').to_a.shuffle[0,8].join

  # boolean attributes
  # defaults:
  #  autoplay => true
  #  loop => true
  #  controls => false
  #
  autoplay = autoplay == "false" ? false : true
  loop = loop == "false" ? false : true
  controls ||= false

- if mp4.nil?
  .als-error Video requires a 'src'
- else
  %video{:id => "#{id}",
        :class => "fullscreen-video",
        :preload => "auto",
        :poster => "#{poster}",
        :autoplay => autoplay,
        :loop => loop,
        :controls => controls,
        :"webkit-playsinline" => true}
    %source{:src => "#{mp4}", :type => "video/mp4"}
    %source{:src => "#{ogv}", :type => "video/ogg"}
- if autoplay == false
  %a.entypo.play{"data-play-pause" => "#{id}", :href => "#"}

:scss

  // TODO: move to core

  #frames .fullscreen-video {
    position:absolute;
    top:0;
    left:0;
    min-width:100%;
    min-height:100%;
    z-index:-1;
    display:none;
  }

  [data-play-pause] {
    display: block;
    padding: 0;
    border-radius: 50%;
    border: 1px solid white;
    width: 48px;
    height: 48px;
    background-color:transparent;
    position:fixed;
    top:calc( 50% - 24px );
    left:calc( 50% - 24px );

    &:before{
      position:absolute;
      font-size: 41px!important;
      top: 23px;
      color:white;
    }
    &.play:before { left: 17px; }
    &.paus:before { left: 16px; }
  }

:coffee
  $video  = $('##{id}')
  $parent = $video.closest('.panel')
  $parent.append($video)
  $video.css 'display', 'block'
  $video[0].play() unless #{autoplay} == false
